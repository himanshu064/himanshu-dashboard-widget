name: Build and Test Dashboard Widget

on:
  push:
    branches:
      - master
  pull_request:

env:
  TELESERO_NPM_TOKEN: ${{ secrets.TELESERO_NPM_TOKEN }}

jobs:
  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and Test
        run: |
          yarn install --check-files
          yarn lint || true
          yarn test || echo "Tests skipped or no tests configured"
        env:
          CI: true

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: read
    needs: test
    if: "'refs/heads/master' == github.ref && !contains(github.event.head_commit.message, 'version bump to')"

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Show current version
        run: cat ./package.json | grep version

      - name: Bump version and push tag
        id: bump
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-message: 'version bump to: {version}'
          preset: 'angular'
          tag-prefix: 'v'
          skip-on-empty: 'false'
          output-file: 'false'

      - name: Show new version
        run: cat ./package.json | grep version

      - name: Configure NPM authentication
        run: |
          echo "//repo.npm.systems.cxcl.io/:_authToken=${TELESERO_NPM_TOKEN}" > .npmrc

      - name: Build package
        run: |
          yarn install --check-files
          yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files-${{ steps.bump.outputs.version }}
          path: dist/
          retention-days: 90

      - name: Create GitHub Release
        if: ${{ steps.bump.outputs.skipped != 'true' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump.outputs.version }}
          name: Release v${{ steps.bump.outputs.version }}
          body: ${{ steps.bump.outputs.clean_changelog }}
          files: |
            dist/widgets.js
            dist/dashboard-widget.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages
        if: ${{ steps.bump.outputs.skipped != 'true' }}
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > .npmrc
          echo "@himanshu064:registry=https://npm.pkg.github.com" >> .npmrc
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to CDN via FTP
        if: ${{ steps.bump.outputs.skipped != 'true' }}
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.SFTP_SERVER }}
          username: ${{ secrets.SFTP_USERNAME }}
          password: ${{ secrets.SFTP_PASSWORD }}
          port: ${{ secrets.SFTP_PORT }}
          local-dir: ./dist/
          server-dir: /httpdocs/himanshu-dashboard-widget/v${{ steps.bump.outputs.version }}/
          dangerous-clean-slate: false
